@using Microsoft.AspNetCore.Components;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Threading.Tasks;
@using Services
@using SharedKernel.Models
@inject NavigationManager navigationManager
@page "/register"

<h3>Registar</h3>
<EditForm Model="_registerModel" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="_registerModel.Email" />
    </div>

    <div>
        <label>Palavra passe:</label>
        <InputText type="password" @bind-Value="_registerModel.Password" />
    </div>

    <button type="submit">Registar</button>
</EditForm>
@if (showErrors)
{
    <br />
    <label @ref="myLabel" class="alert alert-danger">@message</label>
}

@code {
    private RegisterModel _registerModel = new RegisterModel();
    [Inject]
    private IdentityService userManagementService { get; set; }
    private string message { get; set; } = string.Empty;
    private ElementReference myLabel;
    private bool showErrors = false;

    private async Task RegisterUser()
    {
        var response = await userManagementService.RegisterUserAsync(_registerModel);

        if (response.IsSuccessStatusCode)
        {
            message = "Utilizador registado com sucesso.";
            navigationManager.NavigateTo("/");
        }
        else
        {
            var validationDetails = await response.Content.ReadFromJsonAsync<ValidationDetails>();
            if(validationDetails is not null){
                List<string> errors = validationDetails.Errors.Values.SelectMany(v => v).ToList();
                message = string.Join(' ', errors);

                showErrors = true;
            }
        }
    }
}
