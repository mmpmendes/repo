@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json
@using System.Security.Claims
@using Services
@using SharedKernel.DTO
@using SharedKernel.Models

@inject IdentityService userService
@inject NavigationManager navigationManager

<h3>Autenticar</h3>
<div class="mb-3">
    <div class="form-floating mb-3">
        <label class="form-label">Email</label>
        <input @bind="loginModel.Email" type="email" class="form-control" />
    </div>
    <div class="form-floating mb-3">
        <label class="form-label">Palavra-passe</label>
        <input @bind="loginModel.Password" type="password" class="form-control" />
    </div>
    <button class="btn btn-dark" @onclick="HandleLoginAsync">Entrar</button>
    <div>Se ainda não tem conta registe-se <a href="/register">aqui.</a></div>
</div>
@if (errorMessage != null)
{
    <p style="color: red">@errorMessage</p>
}

@code {
    private WegesLoginDTO loginModel = new();
    private string? errorMessage;

    private async Task HandleLoginAsync()
    {
        var token = await userService.LoginAsync(loginModel);
        if (!string.IsNullOrEmpty(token))
        {
            // Store the token for future use (e.g., in localStorage or a service)
            errorMessage = null;
        }
        else
        {
            errorMessage = "Invalid login attempt.";
        }
    }
}